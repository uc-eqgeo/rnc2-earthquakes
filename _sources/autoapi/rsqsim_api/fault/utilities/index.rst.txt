:orphan:

:py:mod:`rsqsim_api.fault.utilities`
====================================

.. py:module:: rsqsim_api.fault.utilities


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   rsqsim_api.fault.utilities.smallest_difference
   rsqsim_api.fault.utilities.normalize_bearing
   rsqsim_api.fault.utilities.bearing_leq
   rsqsim_api.fault.utilities.bearing_geq
   rsqsim_api.fault.utilities.reverse_bearing
   rsqsim_api.fault.utilities.reverse_line
   rsqsim_api.fault.utilities.fit_2d_line
   rsqsim_api.fault.utilities.calculate_dip_direction
   rsqsim_api.fault.utilities.optimize_point_spacing



.. py:function:: smallest_difference(value1, value2)

   Finds smallest angle between two bearings
   :param value1:
   :param value2:
   :return:


.. py:function:: normalize_bearing(bearing)

   change a bearing (in degrees) so that it is an azimuth between 0 and 360.
   :param bearing:
   :return:


.. py:function:: bearing_leq(value, benchmark, tolerance = 0.1)

   Check whether a bearing (value) is anticlockwise of another bearing (benchmark)
   :param value:
   :param benchmark:
   :param tolerance: to account for rounding errors etc
   :return:


.. py:function:: bearing_geq(value, benchmark, tolerance = 0.1)

   Check whether a bearing (value) is clockwise of another bearing (benchmark)
   :param value:
   :param benchmark:
   :param tolerance: to account for rounding errors etc
   :return:


.. py:function:: reverse_bearing(bearing)

   180 degrees from supplied bearing
   :param bearing:
   :return:


.. py:function:: reverse_line(line)

   Change the order that points in a LineString object are presented.
   Updated to work with 3d lines (has_z), September 2021
   Important for OpenSHA, I think
   :param line:
   :return:


.. py:function:: fit_2d_line(x, y)

   Fit a 2D line to a set of points
   :param x:
   :param y:
   :return:


.. py:function:: calculate_dip_direction(line)

   Calculate the strike of a shapely linestring object with coordinates in NZTM,
   then adds 90 to get dip direction. Dip direction is always 90 clockwise from strike of line.
   :param line: Linestring object
   :return:


.. py:function:: optimize_point_spacing(line, spacing)

   Optimize point spacing of a linestring object.
   :param line:
   :param spacing:
   :return:


