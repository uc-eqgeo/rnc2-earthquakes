:orphan:

:py:mod:`rsqsim_api.io.array_operations`
========================================

.. py:module:: rsqsim_api.io.array_operations


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   rsqsim_api.io.array_operations.read_grid
   rsqsim_api.io.array_operations.read_tiff
   rsqsim_api.io.array_operations.read_gmt_grid
   rsqsim_api.io.array_operations.write_tiff
   rsqsim_api.io.array_operations.write_gmt_grd
   rsqsim_api.io.array_operations.tiff2grd
   rsqsim_api.io.array_operations.grd2tiff
   rsqsim_api.io.array_operations.array_to_gmt
   rsqsim_api.io.array_operations.clip_tiff
   rsqsim_api.io.array_operations.reproject_tiff



.. py:function:: read_grid(raster_file, nan_threshold = 100, window = None, buffer = 100, return_meta = False)

   Read
   :param raster_file: file to read
   :param nan_threshold: numbers with an absolute value greater than this are set to NaN
   :param window:
   :param buffer:
   :return:


.. py:function:: read_tiff(tiff, x_correct = None, y_correct = None, nan_threshold = 9000, make_y_ascending = False, window = None, buffer = 100, return_meta = False)

   Read geotiff, rather than generic raster. Uses read_grid.
   :param tiff: Filename
   :param x_correct: Offset to get back to GMT convention
   :param y_correct: Generally same as x_correct
   :param make_y_ascending: flips y and z along y axis so that y[-1] > y[0]
   :return:


.. py:function:: read_gmt_grid(grd_file)

   function to read in a netcdf4 format file. Rasterio is really slow to do it.
   :param grd_file:
   :return:


.. py:function:: write_tiff(filename, x, y, z, epsg = 2193, reverse_y = False, compress_lzw = True)

   Write x, y, z into geotiff format.
   :param filename:
   :param x: x coordinates
   :param y: y coordinates
   :param z: z coordinates: must have ny rows and nx columns
   :param epsg: Usually NZTM (2193)
   :param reverse_y: y starts at y_max and decreases
   :param compress_lzw: lzw compression
   :return:


.. py:function:: write_gmt_grd(x_array, y_array, mesh, grid_name)

   Write old style of GMT grid
   :param x_array:
   :param y_array:
   :param mesh: z values
   :param grid_name: Name of gmt grid. String, usually ending in .grd
   :return:


.. py:function:: tiff2grd(tiff, grd, x_correct = None, y_correct = None, window = None, buffer = 100)

   Helper function to convert geotiff to gmt grid
   :param tiff:
   :param grd:
   :param x_correct: sometimes necessary to correct for differences between pixel and gridline registration
   :param y_correct:
   :return:


.. py:function:: grd2tiff(grd, tiff, x_correct = None, y_correct = None)

   Helper function: GMT grid to geotiff
   :param grd:
   :param tiff:
   :param x_correct:
   :param y_correct:
   :return:


.. py:function:: array_to_gmt(array, out_file)

   :param array:
   :param out_file:
   :return:


.. py:function:: clip_tiff(in_tiff, out_tiff, window, buffer = 100)

   :param in_tiff:
   :param out_tiff:
   :param window:
   :param buffer
   :return:


.. py:function:: reproject_tiff(in_raster, out_raster, dst_epsg = 4326, window = None, buffer = 100, out_format='tiff')

   Copied off rasterio website
   :param in_raster:
   :param out_raster:
   :param dst_epsg:
   :param window
   :param buffer
   :param out_format
   :return:


